{
  "_args": [
    [
      {
        "raw": "autoloader",
        "scope": null,
        "escapedName": "autoloader",
        "name": "autoloader",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\Sravanthi Kethireddy\\Desktop\\mozzie"
    ]
  ],
  "_from": "autoloader@latest",
  "_id": "autoloader@2.1.0",
  "_inCache": true,
  "_location": "/autoloader",
  "_npmUser": {
    "name": "aikar",
    "email": "aikar@aikar.co"
  },
  "_npmVersion": "1.3.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "autoloader",
    "scope": null,
    "escapedName": "autoloader",
    "name": "autoloader",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/autoloader/-/autoloader-2.1.0.tgz",
  "_shasum": "2ef1aa79a0452d8086b8560688d427177938fd97",
  "_shrinkwrap": null,
  "_spec": "autoloader",
  "_where": "C:\\Users\\Sravanthi Kethireddy\\Desktop\\mozzie",
  "author": {
    "name": "Aikar",
    "email": "aikar@aikar.co",
    "url": "http://aikar.co"
  },
  "bugs": {
    "url": "https://github.com/aikar/autoloader/issues"
  },
  "dependencies": {},
  "description": "Autoloads JS Files",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "2ef1aa79a0452d8086b8560688d427177938fd97",
    "tarball": "https://registry.npmjs.org/autoloader/-/autoloader-2.1.0.tgz"
  },
  "engines": {
    "node": ">=0.10"
  },
  "homepage": "http://aikar.co",
  "main": "autoloader.js",
  "maintainers": [
    {
      "name": "aikar",
      "email": "aikar@aikar.co"
    }
  ],
  "name": "autoloader",
  "optionalDependencies": {},
  "readme": "## About\nAutoloads JS files based on name when the class is needed.\n\nThis module removes the needs of using require() all over your files. Simply\ndefine the autoloader to your codebase, and use the names relative to the files.\n\nie lib/Foo/Bar/Baz.js when you load 'lib/' makes Foo_Bar_Baz\nrequire('./lib/Foo/Bar/Baz.js') automatically and return the value.\n\n## 2.0 Requirements\n\n2.0 Drastically changes how this project works. It now requires --harmony under Node 0.10, and the usage\n scenarios have completely changed. It now will replace underscores as seperators such as Foo_Bar instead\n of Foo.Bar.\n\n It also does not have to do any directory scanning and setting up tons of getters, simple Proxy on global catches unreferenced variables!\n\n## Install\n\nInstall with npm install autoloader\n\n## Usage\n\nRun node with --harmony\n\nFolder structure:\n\n    /lib/\n        Foo/\n            Bar.js\n        Foo.js\n    test.js\n    package.json (main: 'test.js')\n    \nFile contents:\n\nlib/Foo.js:\n\n    module.export = function() {\n        console.log(\"Foo\")\n        Foo_Bar();\n    };\n\nlib/Foo/Bar.js:\n\n    module.export = function() {\n        console.log(\"Foo_Bar\")\n    };\n\n\ntest.js:\n    \n    require('autoloader')(__dirname + '/lib')\n    Foo();\n\n\nLoading the module would print to screen:\n\n    Foo\n    Foo_Bar\n\nYou may optionally pass an object as the 2nd parameter and the autoloader will bind to that object instead of global.\nSo consider:\n\n    global.App = require('autoloader')(__dirname + '/lib', require('./myapp'));\n    new App.Foo_Bar();\n\n## Custom Loaders\nIf you pass a function as the 1st argument, autoloader will execute that instead of\nloading by directory, allowing you to control what is returned.\nCallback signature\n\n    function (name, object) { }\n\nYou will need to assign the value yourself if you wish to not have your loader fire every access.\n\n## License\nThe MIT License\n\n  Copyright (c) 2013 Daniel Ennis <aikar@aikar.co>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/aikar/autoloader.git"
  },
  "scripts": {
    "start": "node autoloader.js"
  },
  "version": "2.1.0"
}
